
/****************************************************************************************
*                  Plugin Trail Menu + v 0.1.1 by LEISER
*   * *      Лог изменений      **
*   * v 0.1.1
*   [+] Первый рилиз
*   
*   
*   *   *   *   *   *   *   *    Заказ плагинов для Cs 1.6   *   *   *   *   *   *   *   *
*      Skype: proleiser   |   Заказ через Google: http://goo.gl/forms/k5l3PQ0I7n
*****************************************************************************************/ 
#include <amxmodx>
#include <amxmisc>
#include <hamsandwich>
#include <engine>
#pragma tabsize 0

#define ACCESS_LEVEL      ADMIN_RCON
#define ACCESS_ADMIN      ADMIN_KICK

#define MAX_TEXT_LENGTH   200
#define MAX_NAME_LENGTH   40
#define MAX_PLAYERS      32
#define MAX_DISTANCE   300

#define PREFIX "^1[^3Trail Info^1]"      // Префикс
#define CFG_FILE      "colors.cfg"
#define MAX_COLORS      200

#define DEF_TRAIL_LIFE   2

#define TASKID      1337
#define TICK      0.1

#define NUM_SPRITES   12

new keysmenu = (1<<0)|(1<<1)|(1<<2)|(1<<3)|(1<<4)|(1<<5)|(1<<6)|(1<<7)|(1<<8)|(1<<9)
new keysmenu2 = (1<<0)|(1<<1)|(1<<2)|(1<<3)|(1<<7)|(1<<9)
//Color
new keysmenu3 = (1<<0)|(1<<1)|(1<<2)|(1<<3)|(1<<4)|(1<<7)|(1<<9)


new trailon1[33], trailon2[33], trailon3[33], trailon4[33], trailon5[33], trailon6[33],trailon7[33], trailon8[33],
   trailon9[33], trailon10[33], trailon11[33], trailon12[33], g_Night[33]

new bool:gl_parsed, bool:gl_trail

new gl_trail_life
new gl_trail_size[MAX_PLAYERS]
new gl_trail_brightness[MAX_PLAYERS]
new gl_trail_type[MAX_PLAYERS]

new gl_sprite_name[NUM_SPRITES][] = {
   "sprites/Grean_Trail/Biohazard.spr",
   "sprites/Grean_Trail/tok.spr",
   "sprites/Grean_Trail/CT.spr",
   "sprites/Grean_Trail/chain.spr",
   "sprites/Grean_Trail/Half-Life.spr",
   "sprites/Grean_Trail/letters.spr",
   "sprites/Grean_Trail/lightning.spr",
   "sprites/Grean_Trail/love.spr",
   "sprites/Grean_Trail/minecraft.spr",
   "sprites/Grean_Trail/tok1.spr",
   "sprites/Grean_Trail/snow_white.spr",
   "sprites/Grean_Trail/def_T.spr"
}

new gl_sprite[NUM_SPRITES]

new gl_def_sprite_size[NUM_SPRITES] = {
   5, 12, 4, 16, 16, 6, 9, 4, 15, 14, 15, 20
}

new gl_def_sprite_brightness[NUM_SPRITES] = {
   160, 255, 200, 255, 255, 230, 150, 150, 240, 220, 200, 200
}

new gl_players[MAX_PLAYERS]
new gl_player_position[MAX_PLAYERS][3]
new gl_timer_count[MAX_PLAYERS]
new gl_timer_limit

new gl_player_colors[MAX_PLAYERS][3]
new gl_color_names[MAX_COLORS][MAX_NAME_LENGTH]
new gl_colors[MAX_COLORS][3]
new gl_num_colors

/*****************************************************************************************/
public plugin_init() {
   register_plugin("Trail & Menu", "0.1.1", "LEISER")
   
   register_clcmd("say /trail", "cmdMenu")
   register_clcmd("say_team /trail", "cmdMenu")
   register_menu("Menu 1", keysmenu, "Menu")
   register_menu("Menu 2", keysmenu2, "Menu2")
   register_menu("Menu 3", keysmenu3, "Menu3")
   register_menu("Menu 4", keysmenu3, "Menu4")
   
   register_concmd("job_trail",     "cmdTrail",     ACCESS_LEVEL,   "- ['on'|'off'|'1'|'0'] : enable/disable trails.")
   register_concmd("give_trail",     "cmdUserTrail", ACCESS_LEVEL,   "- <name, @all , #userid> <colorname | 'random' | 'off'> : set user trail.")
   register_concmd("amx_trail_type", "cmdTrailType", ACCESS_LEVEL,   "- <type> : set trail type for all players.")
   register_concmd("amx_trail_life", "cmdTrailLife", ACCESS_LEVEL,   "- [duration] : get/set trail duration, in seconds.")
   register_concmd("amx_trail_size", "cmdTrailSize", ACCESS_LEVEL,   "- [size] : get/set trail size.")
   register_concmd("amx_trail_brightness", "cmdTrailBrightness", ACCESS_LEVEL,  "- [brightness] : get/set trail brightness.")

   RegisterHam(Ham_Killed, "player", "Ham_PlayerKilled_Pre", 0)
   register_clcmd("say", "SayCmd")
   gl_parsed = gl_trail = parse_file()
   if (!gl_sprite[0]) gl_trail = false

   gl_trail_life = DEF_TRAIL_LIFE
   gl_timer_limit = floatround(float(gl_trail_life)/TICK)
}
/*****************************************************************************************/
public plugin_precache()
   for (new i=0; i<NUM_SPRITES; i++)
      gl_sprite[i] = precache_model(gl_sprite_name[i])
/*****************************************************************************************/
public client_putinserver(id) {
   gl_trail_type[id] = gl_sprite[0]
   gl_trail_size[id] = gl_def_sprite_size[0]
   gl_trail_brightness[id] = gl_def_sprite_brightness[0]
}
/*****************************************************************************************/
public client_disconnect(id) {
   if (task_exists(TASKID+id)) remove_task(TASKID+id)
   gl_player_colors[id][0] = gl_player_colors[id][1] = gl_player_colors[id][2] = 0
}

// Game Menu
public cmdMenu(id) {
   if(!is_user_alive(id)) return
   
   static menu[850], len
   len = 0
   
   new Hours[3], HourWork[13] = {22, 23, 00, 1, 2, 3, 4, 5, 6, 7, 8, 9}   //С 22 до 10 Доступно меню
   get_time("%H", Hours, charsmax(Hours))
   for(new i = 0; i <= 12; i++)
      if(str_to_num(Hours) == HourWork[i]) 
         g_Night[id] = true
   
   if(g_Night[id]) {
      // Title
      len += formatex(menu[len], charsmax(menu) - len, "\d[\yTrail-Меню\d]:^n\dБесплатный Траил с \r22:00 \dдо \r10:00^n\dСтатус: %s^n^n", g_Night[id] ? "\yДоступно" : "\rНедоступно")
      
      // 1. Пункт
      if(is_user_alive(id)) {
         if(!trailon1[id])
            len += formatex(menu[len], charsmax(menu) - len, "\r1.\w Биозард^n")
         else
            len += formatex(menu[len], charsmax(menu) - len, "\r1.\w Биозард \d(\rВыбран\d)\w: \yВыкл^n")
      } else len += formatex(menu[len], charsmax(menu) - len, "\r1.\w Биозард \y(\dвы мертвы\y)^n")
      
      // 2. Пункт
      if(is_user_alive(id)) {
         if(!trailon2[id])
            len += formatex(menu[len], charsmax(menu) - len, "\r2.\w Молния^n")
         else
            len += formatex(menu[len], charsmax(menu) - len, "\r2.\w Молния\d(\rВыбран\d)\w: \yВыкл^n")
      } else len += formatex(menu[len], charsmax(menu) - len, "\r2.\w Молния \y(\dвы мертвы\y)^n")
      
      // 3. Пункт
      if(is_user_alive(id)) {
         if(!trailon3[id])
            len += formatex(menu[len], charsmax(menu) - len, "\r3.\w Радуга^n")
         else
            len += formatex(menu[len], charsmax(menu) - len, "\r3.\w Радуга\d(\rВыбран\d)\w: \yВыкл^n")
      } else len += formatex(menu[len], charsmax(menu) - len, "\r3.\w Радуга \y(\dвы мертвы\y)^n")
      
      // 4. Пункт
      if(is_user_alive(id)) {
         if(!trailon4[id])
            len += formatex(menu[len], charsmax(menu) - len, "\r4.\w Цепь^n")
         else
            len += formatex(menu[len], charsmax(menu) - len, "\r4.\w Цепь\d(\rВыбран\d)\w: \yВыкл^n")
      } else len += formatex(menu[len], charsmax(menu) - len, "\r4.\w Цепь \y(\dвы мертвы\y)^n")
      
      // 5. Пункт
      if(is_user_alive(id)) {
         if(!trailon5[id])
            len += formatex(menu[len], charsmax(menu) - len, "\r5.\w Hife Life^n")
         else
            len += formatex(menu[len], charsmax(menu) - len, "\r5.\w Hife Life\d(\rВыбран\d)\w: \yВыкл^n")
      } else len += formatex(menu[len], charsmax(menu) - len, "\r5.\w Hife Life \y(\dвы мертвы\y)^n")
      
      // 6. Пункт
      if(is_user_alive(id)) {
         if(!trailon6[id])
            len += formatex(menu[len], charsmax(menu) - len, "\r6.\w Буквы^n")
         else
            len += formatex(menu[len], charsmax(menu) - len, "\r6.\w Буквы\d(\rВыбран\d)\w: \yВыкл^n")
      } else len += formatex(menu[len], charsmax(menu) - len, "\r6.\w Буквы \y(\dвы мертвы\y)^n")
      
      // 7. Пункт
      if(is_user_alive(id)) {
         if(!trailon7[id])
            len += formatex(menu[len], charsmax(menu) - len, "\r7.\w Молния Two^n")
         else
            len += formatex(menu[len], charsmax(menu) - len, "\r7.\w Молния Two\d(\rВыбран\d)\w: \yВыкл^n")
      } else len += formatex(menu[len], charsmax(menu) - len, "\r7.\w Молния Two \y(\dвы мертвы\y)^n")
      
      // 8. Пункт
      if(is_user_alive(id))
         len += formatex(menu[len], charsmax(menu) - len, "\r8.\y Отключить Trail^n")
      
      // 9. Пункт
      len += formatex(menu[len], charsmax(menu) - len, "^n\r9.\w Дальше")
      // 0. Закрыть
      len += formatex(menu[len], charsmax(menu) - len, "^n\r0.\w Закрыть")
   } //else
      //ChatColor(id, "%s ^4У тебя нету доступа ^1(^3Купи ^4Admin^1/^4VIP ^3привелегии^1)", PREFIX)
   
   if(get_user_flags(id) & ACCESS_ADMIN) {
      // Title
      len += formatex(menu[len], charsmax(menu) - len, "\d[\yTrail-Меню\d]:^n^n")
      
      // 1. Пункт
      if(is_user_alive(id)) {
         if(!trailon1[id])
            len += formatex(menu[len], charsmax(menu) - len, "\r1.\w Биозард^n")
         else
            len += formatex(menu[len], charsmax(menu) - len, "\r1.\w Биозард \d(\rВыбран\d)\w: \yВыкл^n")
      } else len += formatex(menu[len], charsmax(menu) - len, "\r1.\w Биозард \y(\dвы мертвы\y)^n")
      
      // 2. Пункт
      if(is_user_alive(id)) {
         if(!trailon2[id])
            len += formatex(menu[len], charsmax(menu) - len, "\r2.\w Молния^n")
         else
            len += formatex(menu[len], charsmax(menu) - len, "\r2.\w Молния\d(\rВыбран\d)\w: \yВыкл^n")
      } else len += formatex(menu[len], charsmax(menu) - len, "\r2.\w Молния \y(\dвы мертвы\y)^n")
      
      // 3. Пункт
      if(is_user_alive(id)) {
         if(!trailon3[id])
            len += formatex(menu[len], charsmax(menu) - len, "\r3.\w Радуга^n")
         else
            len += formatex(menu[len], charsmax(menu) - len, "\r3.\w Радуга\d(\rВыбран\d)\w: \yВыкл^n")
      } else len += formatex(menu[len], charsmax(menu) - len, "\r3.\w Радуга \y(\dвы мертвы\y)^n")
      
      // 4. Пункт
      if(is_user_alive(id)) {
         if(!trailon4[id])
            len += formatex(menu[len], charsmax(menu) - len, "\r4.\w Цепь^n")
         else
            len += formatex(menu[len], charsmax(menu) - len, "\r4.\w Цепь\d(\rВыбран\d)\w: \yВыкл^n")
      } else len += formatex(menu[len], charsmax(menu) - len, "\r4.\w Цепь \y(\dвы мертвы\y)^n")
      
      // 5. Пункт
      if(is_user_alive(id)) {
         if(!trailon5[id])
            len += formatex(menu[len], charsmax(menu) - len, "\r5.\w Hife Life^n")
         else
            len += formatex(menu[len], charsmax(menu) - len, "\r5.\w Hife Life\d(\rВыбран\d)\w: \yВыкл^n")
      } else len += formatex(menu[len], charsmax(menu) - len, "\r5.\w Hife Life \y(\dвы мертвы\y)^n")
      
      // 6. Пункт
      if(is_user_alive(id)) {
         if(!trailon6[id])
            len += formatex(menu[len], charsmax(menu) - len, "\r6.\w Буквы^n")
         else
            len += formatex(menu[len], charsmax(menu) - len, "\r6.\w Буквы\d(\rВыбран\d)\w: \yВыкл^n")
      } else len += formatex(menu[len], charsmax(menu) - len, "\r6.\w Буквы \y(\dвы мертвы\y)^n")
      
      // 7. Пункт
      if(is_user_alive(id)) {
         if(!trailon7[id])
            len += formatex(menu[len], charsmax(menu) - len, "\r7.\w Молния Two^n")
         else
            len += formatex(menu[len], charsmax(menu) - len, "\r7.\w Молния Two\d(\rВыбран\d)\w: \yВыкл^n")
      } else len += formatex(menu[len], charsmax(menu) - len, "\r7.\w Молния Two \y(\dвы мертвы\y)^n")
      
      // 8. Пункт
      if(is_user_alive(id))
         len += formatex(menu[len], charsmax(menu) - len, "\r8.\y Отключить Trail^n")
      
      // 9. Пункт
      len += formatex(menu[len], charsmax(menu) - len, "^n\r9.\w Дальше")
      // 0. Закрыть
      len += formatex(menu[len], charsmax(menu) - len, "^n\r0.\w Закрыть")
   } else
      ChatColor(id, "%s ^4У тебя нету доступа ^1(^3Купи ^4Admin^1/^4VIP ^3привелегии^1)", PREFIX)
   
   show_menu(id, keysmenu, menu, -1, "Menu 1");
}
// Game Menu
public Menu(id, key) {
   switch (key) {
      case 0: {
         if(is_user_alive(id)) {
            if(trailon1[id]) {
               client_cmd(id,"say trail off")
               trailon1[id] = 0
            } else {
               cmdMenu3(id)
               trailon1[id] = 1
               trailon2[id] = 0
               trailon3[id] = 0
               trailon4[id] = 0
               trailon5[id] = 0
               trailon6[id] = 0
               trailon7[id] = 0
               trailon8[id] = 0
               trailon9[id] = 0
               trailon10[id] = 0
               trailon11[id] = 0
               trailon12[id] = 0
            }
         }
      }
      case 1: {
            if(is_user_alive(id)) {
               if(trailon2[id]) {
                  client_cmd(id,"say trail off")
                  trailon2[id] = 0
               } else {
                  cmdMenu4(id)
                  trailon2[id] = 1
                  trailon1[id] = 0
                  trailon3[id] = 0
                  trailon4[id] = 0
                  trailon5[id] = 0
                  trailon6[id] = 0
                  trailon7[id] = 0
                  trailon8[id] = 0
                  trailon9[id] = 0
                  trailon10[id] = 0
                  trailon11[id] = 0
                  trailon12[id] = 0
               }
            }
            
         }
      case 2: {
            if(is_user_alive(id)) {
               if(trailon3[id]) {
                  client_cmd(id,"say trail off")
                  trailon3[id] = 0
               } else {
                  
                  trailon3[id] = 1
                  trailon1[id] = 0
                  trailon2[id] = 0
                  trailon4[id] = 0
                  trailon5[id] = 0
                  trailon6[id] = 0
                  trailon7[id] = 0
                  trailon8[id] = 0
                  trailon9[id] = 0
                  trailon10[id] = 0
                  trailon11[id] = 0
                  trailon12[id] = 0
               }
            }
            cmdMenu(id)
         }
      case 3: {
            if(is_user_alive(id)) {
               if(trailon4[id]) {
                  client_cmd(id,"say trail off")
                  trailon4[id] = 0
               } else {
                  
                  trailon4[id] = 1
                  trailon1[id] = 0
                  trailon2[id] = 0
                  trailon3[id] = 0
                  trailon5[id] = 0
                  trailon6[id] = 0
                  trailon7[id] = 0
                  trailon8[id] = 0
                  trailon9[id] = 0
                  trailon10[id] = 0
                  trailon11[id] = 0
                  trailon12[id] = 0
               }
            }
            cmdMenu(id)
         }
      case 4: {
            if(is_user_alive(id)) {
               if(trailon5[id]) {
                  client_cmd(id,"say trail off")
                  trailon5[id] = 0
               } else {
                  
                  trailon5[id] = 1
                  trailon1[id] = 0
                  trailon2[id] = 0
                  trailon3[id] = 0
                  trailon4[id] = 0
                  trailon6[id] = 0
                  trailon7[id] = 0
                  trailon8[id] = 0
                  trailon9[id] = 0
                  trailon10[id] = 0
                  trailon11[id] = 0
                  trailon12[id] = 0
               }
            }
            cmdMenu(id)
         }
      case 5: {
            if(is_user_alive(id)) {
               if(trailon6[id]) {
                  client_cmd(id,"say trail off")
                  trailon6[id] = 0
               } else {
                  
                  trailon6[id] = 1
                  trailon1[id] = 0
                  trailon2[id] = 0
                  trailon3[id] = 0
                  trailon4[id] = 0
                  trailon5[id] = 0
                  trailon7[id] = 0
                  trailon8[id] = 0
                  trailon9[id] = 0
                  trailon10[id] = 0
                  trailon11[id] = 0
                  trailon12[id] = 0
               }
            }
            cmdMenu(id)
         }
      case 6: {
            if(is_user_alive(id)) {
               if(trailon7[id]) {
                  client_cmd(id,"say trail off")
                  trailon7[id] = 0
               } else {
                  
                  trailon7[id] = 1
                  trailon1[id] = 0
                  trailon2[id] = 0
                  trailon3[id] = 0
                  trailon4[id] = 0
                  trailon5[id] = 0
                  trailon6[id] = 0
                  trailon8[id] = 0
                  trailon9[id] = 0
                  trailon10[id] = 0
                  trailon11[id] = 0
                  trailon12[id] = 0
               }
            }
            cmdMenu(id)
         }
      case 7: {
            if(is_user_alive(id)) {
               client_cmd(id,"say trail off")
               trailon8[id] = 0
               trailon1[id] = 0
               trailon2[id] = 0
               trailon3[id] = 0
               trailon4[id] = 0
               trailon5[id] = 0
               trailon6[id] = 0
               trailon7[id] = 0
               trailon9[id] = 0
               trailon10[id] = 0
               trailon11[id] = 0
               trailon12[id] = 0
            }
            cmdMenu(id)
         }
      case 8: cmdMenu2(id)
   }
}

// Game Menu 2
public cmdMenu2(id) {
   if(!is_user_alive(id)) return
   
   static menu[850], len
   len = 0
   
   new Hours[3], HourWork[13] = {22, 23, 00, 1, 2, 3, 4, 5, 6, 7, 8, 9}   //С 22 до 10 Доступно меню
   get_time("%H", Hours, charsmax(Hours))
   for(new i = 0; i <= 12; i++)
      if(str_to_num(Hours) == HourWork[i]) 
         g_Night[id] = true
   
   if(g_Night[id]) {
      // Title
      len += formatex(menu[len], charsmax(menu) - len, "\d[\yTrail-Меню\d]:^n\dБесплатный Траил с \r22:00 \dдо \r10:00^n\dСтатус: %s^n^n", g_Night ? "\yДоступно" : "\rНедоступно")

      // 9. Пункт
      if(is_user_alive(id)) {
         if(!trailon9[id])
            len += formatex(menu[len], charsmax(menu) - len, "\r1.\w Minecraft^n")
         else
            len += formatex(menu[len], charsmax(menu) - len, "\r1.\w Minecraft\d(\rВыбран\d)\w: \yВыкл^n")
      } else len += formatex(menu[len], charsmax(menu) - len, "\r1.\w Minecraft \y(\dвы мертвы\y)^n")
      
      // 10. Пункт
      if(is_user_alive(id)) {
         if(!trailon10[id])
            len += formatex(menu[len], charsmax(menu) - len, "\r2.\w Дым^n")
         else
            len += formatex(menu[len], charsmax(menu) - len, "\r2.\w Дым\d(\rВыбран\d)\w: \yВыкл^n")
      } else len += formatex(menu[len], charsmax(menu) - len, "\r2.\w Дым \y(\dвы мертвы\y)^n")
      
      // 11. Пункт
      if(is_user_alive(id)) {
         if(!trailon11[id])
            len += formatex(menu[len], charsmax(menu) - len, "\r3.\w Сияние^n")
         else
            len += formatex(menu[len], charsmax(menu) - len, "\r3.\w Сияние\d(\rВыбран\d)\w: \yВыкл^n")
      } else len += formatex(menu[len], charsmax(menu) - len, "\r3.\w Сияние \y(\dвы мертвы\y)^n")
      
      // 12. Пункт
      if(is_user_alive(id)) {
         if(!trailon12[id])
            len += formatex(menu[len], charsmax(menu) - len, "\r4.\w Радуга Two^n")
         else
            len += formatex(menu[len], charsmax(menu) - len, "\r4.\w Радуга Two\d(\rВыбран\d)\w: \yВыкл^n")
      } else len += formatex(menu[len], charsmax(menu) - len, "\r4.\w Радуга Two \y(\dвы мертвы\y)^n")
      
      // 13. Пункт
      if(is_user_alive(id)) {
         if(!trailon8[id])
            len += formatex(menu[len], charsmax(menu) - len, "\r5.\w Сердечко^n")
         else
            len += formatex(menu[len], charsmax(menu) - len, "\r5.\w Сердечко\d(\rВыбран\d)\w: \yВыкл^n")
      } else len += formatex(menu[len], charsmax(menu) - len, "\r5.\w Сердечко \y(\dвы мертвы\y)^n")
      
      // 14. Пункт
      if(is_user_alive(id))
         len += formatex(menu[len], charsmax(menu) - len, "\r6.\y Отключить Trail^n")
         
      // 8. Пункт
      len += formatex(menu[len], charsmax(menu) - len, "^n\r8.\w Назад")
      // 0. Закрыть
      len += formatex(menu[len], charsmax(menu) - len, "^n\r0.\w Закрыть")
   } //else
      //ChatColor(id, "%s ^4У тебя нету доступа ^1(^3Купи ^4Admin^1/^4VIP ^3привелегии^1)", PREFIX)
   
   if(get_user_flags(id) & ACCESS_ADMIN) {
      // Title
      len += formatex(menu[len], charsmax(menu) - len, "\d[\yTrail-Меню\d]:^n^n")

      // 9. Пункт
      if(is_user_alive(id)) {
         if(!trailon9[id])
            len += formatex(menu[len], charsmax(menu) - len, "\r1.\w Minecraft^n")
         else
            len += formatex(menu[len], charsmax(menu) - len, "\r1.\w Minecraft\d(\rВыбран\d)\w: \yВыкл^n")
      } else len += formatex(menu[len], charsmax(menu) - len, "\r1.\w Minecraft \y(\dвы мертвы\y)^n")
      
      // 10. Пункт
      if(is_user_alive(id)) {
         if(!trailon10[id])
            len += formatex(menu[len], charsmax(menu) - len, "\r2.\w Дым^n")
         else
            len += formatex(menu[len], charsmax(menu) - len, "\r2.\w Дым\d(\rВыбран\d)\w: \yВыкл^n")
      } else len += formatex(menu[len], charsmax(menu) - len, "\r2.\w Дым \y(\dвы мертвы\y)^n")
      
      // 11. Пункт
      if(is_user_alive(id)) {
         if(!trailon11[id])
            len += formatex(menu[len], charsmax(menu) - len, "\r3.\w Сияние^n")
         else
            len += formatex(menu[len], charsmax(menu) - len, "\r3.\w Сияние\d(\rВыбран\d)\w: \yВыкл^n")
      } else len += formatex(menu[len], charsmax(menu) - len, "\r3.\w Сияние \y(\dвы мертвы\y)^n")
      
      // 12. Пункт
      if(is_user_alive(id)) {
         if(!trailon12[id])
            len += formatex(menu[len], charsmax(menu) - len, "\r4.\w Радуга Two^n")
         else
            len += formatex(menu[len], charsmax(menu) - len, "\r4.\w Радуга Two\d(\rВыбран\d)\w: \yВыкл^n")
      } else len += formatex(menu[len], charsmax(menu) - len, "\r4.\w Радуга Two \y(\dвы мертвы\y)^n")
      
      // 13. Пункт
      if(is_user_alive(id)) {
         if(!trailon8[id])
            len += formatex(menu[len], charsmax(menu) - len, "\r5.\w Сердечко^n")
         else
            len += formatex(menu[len], charsmax(menu) - len, "\r5.\w Сердечко\d(\rВыбран\d)\w: \yВыкл^n")
      } else len += formatex(menu[len], charsmax(menu) - len, "\r5.\w Сердечко \y(\dвы мертвы\y)^n")
      
      // 14. Пункт
      if(is_user_alive(id))
         len += formatex(menu[len], charsmax(menu) - len, "\r6.\y Отключить Trail^n")
      
      // 8. Пункт
      len += formatex(menu[len], charsmax(menu) - len, "^n\r8.\w Назад")
      // 0. Закрыть
      len += formatex(menu[len], charsmax(menu) - len, "^n\r0.\w Закрыть")
   }
   show_menu(id, keysmenu2, menu, -1, "Menu 2");
}
// Game Menu 2
public Menu2(id, key) {
   switch (key) {
      case 0: {
            if(is_user_alive(id)) {
               if(trailon9[id]) {
                  client_cmd(id,"say trail off")
                  trailon9[id] = 0
               } else {
                  
                  trailon9[id] = 1
                  trailon1[id] = 0
                  trailon2[id] = 0
                  trailon3[id] = 0
                  trailon4[id] = 0
                  trailon5[id] = 0
                  trailon6[id] = 0
                  trailon7[id] = 0
                  trailon8[id] = 0
                  trailon10[id] = 0
                  trailon11[id] = 0
                  trailon12[id] = 0
               }
            }
            cmdMenu2(id)
      }
      case 1: {
            if(is_user_alive(id)) {
               if(trailon10[id]) {
                  client_cmd(id,"say trail off")
                  trailon10[id] = 0
               } else {
                  
                  trailon10[id] = 1
                  trailon1[id] = 0
                  trailon2[id] = 0
                  trailon3[id] = 0
                  trailon4[id] = 0
                  trailon5[id] = 0
                  trailon6[id] = 0
                  trailon7[id] = 0
                  trailon8[id] = 0
                  trailon9[id] = 0
                  trailon11[id] = 0
                  trailon12[id] = 0
               }
            }
            cmdMenu2(id)
      }
      case 2: {
            if(is_user_alive(id)) {
               if(trailon11[id]) {
                  client_cmd(id,"say trail off")
                  trailon11[id] = 0
               } else {
                  
                  trailon11[id] = 1
                  trailon1[id] = 0
                  trailon2[id] = 0
                  trailon3[id] = 0
                  trailon4[id] = 0
                  trailon5[id] = 0
                  trailon6[id] = 0
                  trailon7[id] = 0
                  trailon8[id] = 0
                  trailon9[id] = 0
                  trailon10[id] = 0
                  trailon12[id] = 0
               }
            }
            cmdMenu2(id)
      }
      case 3: {
            if(is_user_alive(id)) {
               if(trailon12[id]) {
                  client_cmd(id,"say trail off")
                  trailon12[id] = 0
               } else {
                  
                  trailon12[id] = 1
                  trailon1[id] = 0
                  trailon2[id] = 0
                  trailon3[id] = 0
                  trailon4[id] = 0
                  trailon5[id] = 0
                  trailon6[id] = 0
                  trailon7[id] = 0
                  trailon8[id] = 0
                  trailon9[id] = 0
                  trailon10[id] = 0
                  trailon11[id] = 0
               }
            }
            cmdMenu2(id)
      }
      case 4: {
         if(is_user_alive(id)) {
               if(trailon8[id]) {
                  client_cmd(id,"say trail off")
                  trailon8[id] = 0
               } else {
                  
                  trailon8[id] = 1
                  trailon1[id] = 0
                  trailon2[id] = 0
                  trailon3[id] = 0
                  trailon4[id] = 0
                  trailon5[id] = 0
                  trailon6[id] = 0
                  trailon7[id] = 0
                  trailon9[id] = 0
                  trailon10[id] = 0
                  trailon11[id] = 0
                  trailon12[id] = 0
               }
         }
      }
      case 5: {
         if(is_user_alive(id)) {
            client_cmd(id,"say trail off")
            trailon8[id] = 0
            trailon1[id] = 0
            trailon2[id] = 0
            trailon3[id] = 0
            trailon4[id] = 0
            trailon5[id] = 0
            trailon6[id] = 0
            trailon7[id] = 0
            trailon9[id] = 0
            trailon10[id] = 0
            trailon11[id] = 0
            trailon12[id] = 0
         }
      }
      case 7:cmdMenu2(id)
   }
}

// Menu Color 1
public cmdMenu3(id) {
   if(!is_user_alive(id)) return
   
   static menu[850], len
   len = 0
   
      // Title
      len += formatex(menu[len], charsmax(menu) - len, "\d[\yTrail-Меню\d] \yВыбери цвет:^n^n")

      // 1. Пункт
      len += formatex(menu[len], charsmax(menu) - len, "\r1.\w Золотой цвет^n")
      
      // 2. Пункт
      len += formatex(menu[len], charsmax(menu) - len, "\r2.\w Синий цвет^n")
      
      // 3. Пункт
      len += formatex(menu[len], charsmax(menu) - len, "\r3.\w Красный цвет^n")
      
      // 4. Пункт
      len += formatex(menu[len], charsmax(menu) - len, "\r4.\w Зеленый цвет^n")
      
      // 5. Пункт
      len += formatex(menu[len], charsmax(menu) - len, "\r5.\w Ораньжевый цвет^n")
      
      // 8. Пункт
      len += formatex(menu[len], charsmax(menu) - len, "^n\r8.\w Назад")
      // 0. Закрыть
      len += formatex(menu[len], charsmax(menu) - len, "^n\r0.\w Закрыть")
      
   show_menu(id, keysmenu3, menu, -1, "Menu 3");
}
// Color 1
public Menu3(id, key) {
   switch (key) {
      case 0:client_cmd(id,"say trail 1 gold")
      case 1:client_cmd(id,"say trail 1 blue")
      case 2:client_cmd(id,"say trail 1 red")
      case 3:client_cmd(id,"say trail 1 green")
      case 4:client_cmd(id,"say trail 1 orange")
      case 7:cmdMenu(id)
   }
}
// Menu Color 2
public cmdMenu4(id) {
   if(!is_user_alive(id)) return
   
   static menu[850], len
   len = 0
   
      // Title
      len += formatex(menu[len], charsmax(menu) - len, "\d[\yTrail-Меню\d] \yВыбери цвет:^n^n")

      // 1. Пункт
      len += formatex(menu[len], charsmax(menu) - len, "\r1.\w Золотой цвет^n")
      
      // 2. Пункт
      len += formatex(menu[len], charsmax(menu) - len, "\r2.\w Синий цвет^n")
      
      // 3. Пункт
      len += formatex(menu[len], charsmax(menu) - len, "\r3.\w Красный цвет^n")
      
      // 4. Пункт
      len += formatex(menu[len], charsmax(menu) - len, "\r4.\w Зеленый цвет^n")
      
      // 5. Пункт
      len += formatex(menu[len], charsmax(menu) - len, "\r5.\w Ораньжевый цвет^n")
      
      // 8. Пункт
      len += formatex(menu[len], charsmax(menu) - len, "^n\r8.\w Назад")
      // 0. Закрыть
      len += formatex(menu[len], charsmax(menu) - len, "^n\r0.\w Закрыть")
      
   show_menu(id, keysmenu3, menu, -1, "Menu 4");
}
// Color 2
public Menu4(id, key) {
   switch (key) {
      case 0:client_cmd(id,"say trail 2 gold")
      case 1:client_cmd(id,"say trail 2 blue")
      case 2:client_cmd(id,"say trail 2 red")
      case 3:client_cmd(id,"say trail 2 green")
      case 4:client_cmd(id,"say trail 2 orange")
      case 7:cmdMenu(id)
   }
}

/*****************************************************************************************/
//  cmdTrail ['on'|'off'|'1'|'0'] : enable/disable trails.
public cmdTrail(id, level, cid) {
   if (!cmd_access(id, level, cid, 1)) return PLUGIN_HANDLED
   
   new str[5]
   read_argv(1, str, 4)
   if (equali(str, "on") || equali(str, "1")) {
      if (gl_trail)
         console_print(id, "Линии разрешены на сервере.")
      else {
         gl_trail = true
         console_print(id, "Линии сейчас разрешены.")
      }
   } else if (equali(str, "off") || equali(str, "0")) {
      if (!gl_trail)
         console_print(id, "Линии запрещены на сервере.")
      else {
         gl_trail = false
         new playercount
         get_players(gl_players, playercount)
         for (new i=0; i<playercount; i++) {
            kill_trail_task(gl_players[i])
         }
         say_to_all("Ваша линия была удалена.", id)
         console_print(id, "Линии сейчас запрещены.")
      }
   } else {
      if (gl_trail)
         console_print(id, "Линии разрешены.")
      else
         console_print(id, "Линии запрещены.")
   }
   return PLUGIN_HANDLED
}

/*****************************************************************************************/
//cmdUserTrail <name, @all , #userid> <colorname | 'random' | 'off'> : set user trail.
public cmdUserTrail(id, level, cid) {
   if (!cmd_access(id, level, cid, 3)) return PLUGIN_HANDLED
   
   if (!gl_parsed) {
      console_print(id, "Линии выключены, потому что невозможно прочитать config файл '%s'!", CFG_FILE)
      return PLUGIN_HANDLED
   }

   new user[MAX_NAME_LENGTH+1], colorname[MAX_NAME_LENGTH]
   new plName[MAX_NAME_LENGTH+1]

   read_argv(1, user, MAX_NAME_LENGTH)
   read_argv(2, colorname, MAX_NAME_LENGTH-1)
   
   new player = cmd_target(id, user, 6)
   if(!player) {
      console_print(id, "Неизвестный игрок: %s", user)
      return PLUGIN_HANDLED
   }
      
   get_user_name(player, plName, MAX_NAME_LENGTH)
   if (access(player, ADMIN_IMMUNITY) && id!=player) {
      console_print(id, "Вы не можете применить это к %s", plName)
      return PLUGIN_HANDLED
   }
   if (!is_user_alive(player)) {
      console_print(id, "Только для живых игроков!")
      return PLUGIN_HANDLED
   }
   
   if (equali(colorname, "off")) {
      if (!gl_player_colors[player][0] && !gl_player_colors[player][1] && !gl_player_colors[player][2]) {
         console_print(id, "%s линия уже выключена!", plName)
         return PLUGIN_HANDLED
      }
      kill_trail_task(player)
      //console_print(id, "%s ^1%s ^4линия была удалена.", PREFIX, plName)
      ChatColor(player,  "%s ^4Ваша линия была удалена.", PREFIX)
   } else if (equali(colorname, "random")) {
      do_trail(player, "", "")
      //console_print(id, "У %s случайный цвет линии.", plName)
   } else {
      do_trail(player, colorname, "")
      console_print(id, "%s взял %s линию.", plName, colorname)
   }
   return PLUGIN_HANDLED
}

/*****************************************************************************************/
//cmdTrailType <type> : set trail type (sprite) for all players
public cmdTrailType(id, level, cid) {
   if (!cmd_access(id, level, cid, 2)) return PLUGIN_HANDLED
   
   if (!gl_parsed) {
      console_print(id, "Линии выключены, потому что не возможно прочитать config файл '%s'!", CFG_FILE)
      return PLUGIN_HANDLED
   }
   
   new str[5], type
   read_argv(1, str, 4)
   type = str_to_num(str)
   if (type<1 || type>NUM_SPRITES) {
      console_print(id, "Тип линии должен быть в [1,%d] диапазоне!", NUM_SPRITES)
      return PLUGIN_HANDLED
   }
   for (new i=0; i<MAX_PLAYERS; i++) {
      gl_trail_type[i] = gl_sprite[type-1]
      gl_trail_size[i] = gl_def_sprite_size[type-1]
      gl_trail_brightness[i] = gl_def_sprite_brightness[type-1]
   }
   restart_player_trail(id)
   return PLUGIN_HANDLED
}

/*****************************************************************************************/
//cmdTrailLife [duration] : get/set trail duration, in seconds.
public cmdTrailLife(id, level, cid) {
   if (!cmd_access(id, level, cid, 1)) return PLUGIN_HANDLED

   if (!gl_parsed) {
      console_print(id, "Линии выключены, потому что не возможно прочитать config файл '%s'!", CFG_FILE)
      return PLUGIN_HANDLED
   }
   
   new Str[3], life
   read_argv(1, Str, 2)
   if (!Str[0]) {
      console_print(id, "Линия включется через %d секунды.", gl_trail_life)
      return PLUGIN_HANDLED
   }
   life = str_to_num(Str)
   if (life<1 || life>30) {
      console_print(id, "Линия должна быть в [1,30] диапазоне!")
      return PLUGIN_HANDLED
   }
   gl_trail_life = life
   gl_timer_limit = floatround(float(life)/TICK)
   restart_players_trails()
   
   return PLUGIN_HANDLED
}

/*****************************************************************************************/
//cmdTrailSize [size] : get/set trail size.
public cmdTrailSize(id, level, cid) {
   if (!cmd_access(id, level, cid, 1)) return PLUGIN_HANDLED

   if (!gl_parsed) {
      console_print(id, "Линии выключены, потому что не возможно прочитать config файл '%s'!", CFG_FILE)
      return PLUGIN_HANDLED
   }

   new Str[3], size
   read_argv(1, Str, 2)
   if (!Str[0]) {
      console_print(id, "Ваш размер линии в настоящее время %d.", gl_trail_size[id])
      return PLUGIN_HANDLED
   }
   size = str_to_num(Str)
   if (size<1) {
      console_print(id, "Размер линии должен быть позитивным!")
      return PLUGIN_HANDLED
   }
   gl_trail_size[id] = size
   restart_player_trail(id)

   return PLUGIN_HANDLED
}

/*****************************************************************************************/
//cmdTrailBrightness [brightness] : get/set trail brightness.
public cmdTrailBrightness(id, level, cid) {
   if (!cmd_access(id, level, cid, 1)) return PLUGIN_HANDLED

   if (!gl_parsed) {
      console_print(id, "Линии выключены, потому что не возможно прочитать config файл '%s'!", CFG_FILE)
      return PLUGIN_HANDLED
   }

   new Str[3], bright
   read_argv(1, Str, 3)
   if (!Str[0]) {
      console_print(id, "Ваша яркость линии в настоящее время %d.", gl_trail_brightness[id])
      return PLUGIN_HANDLED
   }
   bright = str_to_num(Str)
   if (bright<1 || bright>255) {
      console_print(id, "Яркость линии должна быть в [1,255] диапазоне!")
      return PLUGIN_HANDLED
   }
   gl_trail_brightness[id] = bright
   restart_player_trail(id)

   return PLUGIN_HANDLED
}

/*****************************************************************************************/
//sayCmd : say trail <[['light'|'dark'] colorname] | ['random'] | ['off'] | ['help']>
public SayCmd(id, level, cid) {
   if(!is_user_alive(id))
      ChatColor(id, "%s ^4Вы мертвы!", PREFIX)
   
   new args[128], plName[MAX_NAME_LENGTH], colname[MAX_NAME_LENGTH], arg2[MAX_NAME_LENGTH], arg3[MAX_NAME_LENGTH], typenum
   read_args(args, 128)
   remove_quotes(args)
   
   if(equali(args, "trail", 5)) {
      new Hours[3], HourWork[13] = {22, 23, 00, 1, 2, 3, 4, 5, 6, 7, 8, 9}   //С 22 до 10 Доступно меню
      get_time("%H", Hours, charsmax(Hours))
      for(new i = 0; i <= 12; i++)
         if(str_to_num(Hours) == HourWork[i]) 
            g_Night[id] = true
            
      if(g_Night[id]) {
            if (!gl_trail) {
               ChatColor(id, "%s ^4Линии отключены.", PREFIX)
               return PLUGIN_HANDLED
            }

            get_user_name(id, plName, MAX_NAME_LENGTH)

            if (!args[5]) {
               do_trail(id, "", "")
               return PLUGIN_HANDLED
            } else {
               parse(args[6], colname, MAX_NAME_LENGTH, arg2, MAX_NAME_LENGTH, arg3, MAX_NAME_LENGTH)
               typenum = str_to_num(colname)
            }
            
            if (equali(colname, "off")) {
               if (!gl_player_colors[id][0] && !gl_player_colors[id][1] && !gl_player_colors[id][2]) {
                  ChatColor(id, "%s ^4Ваша линия удалена!", PREFIX)
                  return PLUGIN_HANDLED
               }
               kill_trail_task(id)
               ChatColor(id, "%s ^4Ваша линия была удалена.", PREFIX)
               return PLUGIN_HANDLED
            } else if (equali(colname, "random")) {
               do_trail(id, "", "")
               return PLUGIN_HANDLED
            }

            if (typenum) {
               if (typenum<1 || typenum>NUM_SPRITES) {
                  ChatColor(id, "%s ^4Тип линии должен быть в диапазоне ^3[^41,%d^3].", PREFIX, NUM_SPRITES)
                  return PLUGIN_HANDLED
               }
               typenum--
               gl_trail_type[id] = gl_sprite[typenum]
               gl_trail_size[id] = gl_def_sprite_size[typenum]
               gl_trail_brightness[id] = gl_def_sprite_brightness[typenum]
               if (arg2[0]) {
                  colname = arg2
                  arg2 = arg3
               } else {
                  if (!gl_player_colors[id][0] && !gl_player_colors[id][1] && !gl_player_colors[id][2]) {
                     do_trail(id, "", "")
                     return PLUGIN_HANDLED
                  }
                  new r = gl_player_colors[id][0]
                  new g = gl_player_colors[id][1]
                  new b = gl_player_colors[id][2]
                  kill_trail_task(id)
                  gl_player_colors[id][0] = r
                  gl_player_colors[id][1] = g
                  gl_player_colors[id][2] = b
                  get_user_origin(id, gl_player_position[id])
                  set_task(TICK, "check_position", TASKID+id, "", 0, "b")
                  trail_msg(id)
                  ChatColor(id, "%s ^4Вы выбрали тип ^3%d.", PREFIX, typenum+1)
                  return PLUGIN_HANDLED
               }
            }
            if (equali(colname, "dark")) {
               copy(colname, MAX_NAME_LENGTH-1, arg2)
               if (!colname[0]) {
                  ChatColor(id, "% ^4Выберите цвет!", PREFIX)
                  return PLUGIN_HANDLED
               }
               do_trail(id, colname, "dark")
            } else if (equali(colname, "light")) {
               copy(colname, MAX_NAME_LENGTH-1, arg2)
               if (!colname[0]) {
                  ChatColor(id, "%s ^4Выберите цвет!", PREFIX)
                  return PLUGIN_HANDLED
               }
               do_trail(id, colname, "light")
            } 
            else
               do_trail(id, colname, "")
      }
   }
   if (equali(args, "trail", 5) && get_user_flags(id) & ACCESS_ADMIN) {
      if (!gl_trail) {
         ChatColor(id, "%s ^4Линии отключены.", PREFIX)
         return PLUGIN_HANDLED
      }
      
      get_user_name(id, plName, MAX_NAME_LENGTH)
      if (!args[5]) {
         do_trail(id, "", "")
         return PLUGIN_HANDLED
      } else {
         parse(args[6], colname, MAX_NAME_LENGTH, arg2, MAX_NAME_LENGTH, arg3, MAX_NAME_LENGTH)
         typenum = str_to_num(colname)
      }
      if (equali(colname, "off")) {
         if (!gl_player_colors[id][0] && !gl_player_colors[id][1] && !gl_player_colors[id][2]) {
            ChatColor(id, "%s ^4Ваша линия удалена!", PREFIX)
            return PLUGIN_HANDLED
         }
         kill_trail_task(id)
         ChatColor(id, "%s ^4Ваша линия была удалена.", PREFIX)
         return PLUGIN_HANDLED
      } else if (equali(colname, "random")) {
         do_trail(id, "", "")
         return PLUGIN_HANDLED
      }
      if (typenum) {
         if (typenum<1 || typenum>NUM_SPRITES) {
            ChatColor(id, "%s ^4Тип линии должен быть в диапазоне ^3[^41,%d^3].", PREFIX, NUM_SPRITES)
            return PLUGIN_HANDLED
         }
         typenum--
         gl_trail_type[id] = gl_sprite[typenum]
         gl_trail_size[id] = gl_def_sprite_size[typenum]
         gl_trail_brightness[id] = gl_def_sprite_brightness[typenum]
         if (arg2[0]) {
            colname = arg2
            arg2 = arg3
         } else {
            if (!gl_player_colors[id][0] && !gl_player_colors[id][1] && !gl_player_colors[id][2]) {
               do_trail(id, "", "")
               return PLUGIN_HANDLED
            }
            new r = gl_player_colors[id][0]
            new g = gl_player_colors[id][1]
            new b = gl_player_colors[id][2]
            kill_trail_task(id)
            gl_player_colors[id][0] = r
            gl_player_colors[id][1] = g
            gl_player_colors[id][2] = b
            get_user_origin(id, gl_player_position[id])
            set_task(TICK, "check_position", TASKID+id, "", 0, "b")
            trail_msg(id)
            ChatColor(id, "%s ^4Вы выбрали тип ^3%d.", PREFIX, typenum+1)
            return PLUGIN_HANDLED
         }
      }
      if (equali(colname, "dark")) {
         copy(colname, MAX_NAME_LENGTH-1, arg2)
         if (!colname[0]) {
            ChatColor(id, "% ^4Выберите цвет!", PREFIX)
            return PLUGIN_HANDLED
         }
         do_trail(id, colname, "dark")
      } else if (equali(colname, "light")) {
         copy(colname, MAX_NAME_LENGTH-1, arg2)
         if (!colname[0]) {
            ChatColor(id, "%s ^4Выберите цвет!", PREFIX)
            return PLUGIN_HANDLED
         }
         do_trail(id, colname, "light")
      }
      else
         do_trail(id, colname, "")
   }
   return PLUGIN_CONTINUE
}

/*****************************************************************************************/
do_trail(id, colname[], intensity[]) {
   new i
   new name[33]

   get_user_name(id, name, 32)
   if (!colname[0]) {
      kill_trail_task(id)
      gl_player_colors[id][0] = random(256)
      gl_player_colors[id][1] = random(256)
      gl_player_colors[id][2] = random(256)
      get_user_origin(id, gl_player_position[id])
      set_task(TICK, "check_position", TASKID+id, "", 0, "b")
      trail_msg(id)
      //ChatColor(id, "%s ^4Вы выбрали случайный цвет вашей линии.", PREFIX)
      return
   }
   for (i=0; i<gl_num_colors; i++) {
      if (equali(colname, gl_color_names[i])) {
         new Float:intens, r, g, b
         if (equali(intensity, "dark"))
            intens = 0.5
         else if (equali(intensity, "light"))
            intens = 2.0
         else {
            copy(intensity, 1, "")
            intens = 1.0
         }
         kill_trail_task(id)
         r = floatround(float(gl_colors[i][0]) * intens)
         g = floatround(float(gl_colors[i][1]) * intens)
         b = floatround(float(gl_colors[i][2]) * intens)
         gl_player_colors[id][0] = min(r, 255)
         gl_player_colors[id][1] = min(g, 255)
         gl_player_colors[id][2] = min(b, 255)
         get_user_origin(id, gl_player_position[id])
         set_task(TICK, "check_position", TASKID+id, "", 0, "b")
         trail_msg(id)
         if (intensity[0])
            ChatColor(id, "%s ^4Вы выбрали ^3%s ^4тип ^3%s ^4линии.", PREFIX, intensity, colname)
         else
            ChatColor(id, "%s ^4Вы выбрали ^3%s ^4линию.", PREFIX, colname)
         return
      }
   }
   ChatColor(id, "%s ^4Извините, ^3%s, ^4но цвета ^3'%s' ^4- нет!", PREFIX, name, colname)
   return
}

/****************************************************************************************/
public check_position(taskid) {
   new origin[3], id = taskid-TASKID

   if (!get_user_team(id)) {
      kill_trail_msg(id)
      return
   }
   
   get_user_origin(id, origin)
   if (origin[0]!=gl_player_position[id][0] || origin[1]!=gl_player_position[id][1] || origin[2]!=gl_player_position[id][2]) {
      if (get_distance(origin, gl_player_position[id])>MAX_DISTANCE || gl_timer_count[id] >= gl_timer_limit/2) {
         kill_trail_msg(id)
         trail_msg(id)
      }
      gl_player_position[id][0] = origin[0]
      gl_player_position[id][1] = origin[1]
      gl_player_position[id][2] = origin[2]
      gl_timer_count[id] = 0
   } else
      if (gl_timer_count[id] < gl_timer_limit) gl_timer_count[id]++
}

/****************************************************************************************/
kill_trail_task(id) {
   if (task_exists(TASKID+id)) remove_task(TASKID+id)
   kill_trail_msg(id)
   gl_player_colors[id][0] = gl_player_colors[id][1] = gl_player_colors[id][2] = 0
}

/****************************************************************************************/
kill_trail_msg(id) {
   gl_timer_count[id] = 0
   
   message_begin(MSG_BROADCAST, SVC_TEMPENTITY)
   write_byte(99)   // TE_KILLBEAM
   write_short(id)
   message_end()
}

/****************************************************************************************/
trail_msg(id) {
   message_begin(MSG_BROADCAST, SVC_TEMPENTITY)
   write_byte(22)   // TE_BEAMFOLLOW
   write_short(id)
   write_short(gl_trail_type[id])
   write_byte(gl_trail_life*10)
   write_byte(gl_trail_size[id])
   write_byte(gl_player_colors[id][0])
   write_byte(gl_player_colors[id][1])
   write_byte(gl_player_colors[id][2])
   write_byte(gl_trail_brightness[id])
   message_end()
}

/****************************************************************************************/
restart_player_trail(id) {
   if (task_exists(TASKID+id)) {
      remove_task(TASKID+id)
      kill_trail_msg(id)
      get_user_origin(id, gl_player_position[id])
      set_task(TICK, "check_position", TASKID+id, "", 0, "b")
      trail_msg(id)
   }
}

/****************************************************************************************/
//Рестарт трайла
restart_players_trails() {
   new playercount
   get_players(gl_players, playercount)
   for (new i=0; i<playercount; i++)
      restart_player_trail(gl_players[i])
}

/****************************************************************************************/
//Выполнеие команды
say_to_all(msg[], id) {
   new playercount
   get_players(gl_players, playercount)
   for (new i=0; i<playercount; i++)
      if (gl_players[i]!=id) ChatColor(gl_players[i], msg)
}

/****************************************************************************************/
bool:parse_file() {
new got_line, line_num=0,  len=0, parsed
new r[3][4], g[3][4], b[3][4]
new full_line[MAX_TEXT_LENGTH], rest_line[MAX_TEXT_LENGTH], cfgdir[MAX_TEXT_LENGTH], cfgpath[MAX_TEXT_LENGTH]

gl_num_colors = 0
get_configsdir(cfgdir, MAX_TEXT_LENGTH)
format(cfgpath, MAX_TEXT_LENGTH, "%s/%s", cfgdir, CFG_FILE)
if (!file_exists(cfgpath)) {
log_amx("ERROR: Cannot find configuration file '%s'!", cfgpath)
return false
}
got_line = read_file(cfgpath, line_num, full_line, MAX_TEXT_LENGTH, len)
if (got_line <=0) {
log_amx("ERROR: Cannot read configuration file '%s'!", cfgpath)
return false
}
while (got_line>0) {
if (!equal(full_line, "//", 2) && len) {
strtok(full_line, gl_color_names[gl_num_colors], MAX_NAME_LENGTH, rest_line, MAX_TEXT_LENGTH, ' ', 1)
copy(full_line, MAX_TEXT_LENGTH, rest_line)

parsed = parse(full_line,r[0],3,g[0],3,b[0],3)
if (parsed<3) {
log_amx("ERROR: Not enough colors, line %d in configuration file '%s'!", 1+line_num, CFG_FILE)
return false
}
gl_colors[gl_num_colors][0] = str_to_num(r[0])
gl_colors[gl_num_colors][1] = str_to_num(g[0])
gl_colors[gl_num_colors][2] = str_to_num(b[0])

gl_num_colors++
if (gl_num_colors>=MAX_COLORS) {
log_amx("WARNING: Max colors reached in file '%s'!", CFG_FILE)
return true
}
}
line_num++
got_line = read_file(cfgpath, line_num, full_line, MAX_TEXT_LENGTH, len)
}
return true
}

public Ham_PlayerKilled_Pre(pVictim, pKiller) kill_trail_task(pVictim)

stock ChatColor(const id, const input[], any:...) {
    static count = 1, players[32]
    static msg[191]
    vformat(msg, 190, input, 3)
    
    replace_all(msg, 190, "!g", "^4") 
    replace_all(msg, 190, "!y", "^1") 
    replace_all(msg, 190, "!team", "^3") 
    replace_all(msg, 190, "!team2", "^0")
    
    if (id) players[0] = id; else get_players(players, count, "ch")
    {
        for (new i = 0; i < count; i++) {
            if (is_user_connected(players[i])) {
                message_begin(MSG_ONE_UNRELIABLE, get_user_msgid("SayText"), _, players[i])
                write_byte(players[i]);
                write_string(msg);
                message_end();
            }
        }
    }
}
